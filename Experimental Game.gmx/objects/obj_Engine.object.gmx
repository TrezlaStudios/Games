<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Scripts
randomize();
init_Pixels();
init_Specialty_Pixels();
init_Upgrades();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Vars
globalvar Pixel_Index, LMB_Ability, RMB_Ability;
Pixel_Index = 0;
LMB_Ability = -1;
RMB_Ability = -1;

// Temp Vars
Selected_Pixel = noone;
startX = mouse_x;
startY = mouse_y;
cnt = room_speed/8;

// Loading Data
Data_Load();

/// Debug Vars
globalvar DRAW_BOUNDARIES;
DRAW_BOUNDARIES = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Pixels
if (!instance_position(mouse_x,mouse_y,obj_Pixel)) {
if (mouse_check_button_pressed(mb_left)) {
    if (!instance_position(mouse_x,mouse_y,obj_Boundary)) {
        if (Pixel[Pixel_Index, 5] == false) {
            if (Pixel[Pixel_Index, 1] &gt; 0) {
                Pixel[Pixel_Index, 1] -= 1;
                Spawn_Pixel();
            }
        } else {
            Spawn_Pixel();
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change Pixels
if (mouse_wheel_down()) {
    if (Pixel_Index &lt; array_height_2d(Pixel)-1) {
        Pixel_Index += 1;
    } else {
        Pixel_Index = 0;
    }
}

if (mouse_wheel_up()) {
    if (Pixel_Index &gt; 0) {
        Pixel_Index -= 1;
    } else {
        Pixel_Index = array_height_2d(Pixel)-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Abilities

/* RETRACT */
if (RMB_Ability = 0) {
    if (mouse_check_button(mb_right)) {
        with (obj_Pixel) {
            if (point_distance(x,y,mouse_x,mouse_y) &lt; 100) {
                var dir, impulse_distance;
                dir = point_direction(mouse_x,mouse_y,x,y);
                impulse_distance = 20;
                physics_apply_impulse(mouse_x,mouse_y,lengthdir_x(impulse_distance,dir),lengthdir_y(impulse_distance,dir));
            }
        }
    }
}

/* MAGNET */
if (RMB_Ability = 1) {
    if (mouse_check_button(mb_right)) {
        with (obj_Pixel) {
            if (point_distance(x,y,mouse_x,mouse_y) &lt; 100) {
                var dir, impulse_distance;
                dir = point_direction(mouse_x,mouse_y,x,y)+180;
                impulse_distance = 20;
                physics_apply_impulse(mouse_x,mouse_y,lengthdir_x(impulse_distance,dir),lengthdir_y(impulse_distance,dir));
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Automatic Spawning

if (keyboard_check(vk_space)) {
    if (cnt&gt; 0) {
        cnt -= 1;
    } else {
        if (Pixel[Pixel_Index, 1] &gt; 0) {
            Spawn_Pixel();
            cnt = room_speed/8;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Click &amp; Launch Pixels
if (instance_position(mouse_x,mouse_y,obj_Pixel)) {
    if (mouse_check_button_pressed(mb_left)) {
        startX = mouse_x;
        startY = mouse_y;
        Selected_Pixel = instance_place(mouse_x, mouse_y, obj_Pixel);
    }
}

if (mouse_check_button_released(mb_left)) {
    with (Selected_Pixel) {
        //phy_rotation = point_direction(startX, startY, mouse_x, mouse_y);
        physics_apply_local_impulse(startX-x, startY-y, mouse_x-x, mouse_y-y);
    }
    Selected_Pixel = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button(mb_left)) {
    draw_line_colour(startX,startY,mouse_x,mouse_y,c_red,c_red);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
